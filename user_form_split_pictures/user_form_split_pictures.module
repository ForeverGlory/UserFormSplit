<?php

function user_form_split_pictures_user_categories() {
  return array(
    array(
      'name' => 'pictures',
      'title' => t('user pictures'),
      'weight' => 1,
    ),
  );
}

function user_form_split_pictures_form_user_profile_form_alter(&$form, &$form_state) {
  global $user;
  if ($form['#user_category'] != 'pictures') {
    return;
  }
  if (!variable_get('user_pictures', 0)) {
    return;
  }
  $account = $form['#user'];
  // Picture/avatar.
  $form['picture'] = array(
    '#type' => 'fieldset',
    '#title' => t('Picture'),
    '#weight' => 1,
    '#access' => variable_get('user_pictures', 0),
  );
  $form['picture']['picture'] = array(
    '#type' => 'value',
    '#value' => isset($account->picture) ? $account->picture : NULL,
  );
  $form['picture']['picture_current'] = array(
    '#markup' => theme('user_picture', array('account' => $account)),
  );
  $form['picture']['picture_delete'] = array(
    '#type' => 'checkbox',
    '#title' => t('Delete picture'),
    '#access' => !empty($account->picture->fid),
    '#description' => t('Check this box to delete your current picture.'),
  );
  $form['picture']['picture_upload'] = array(
    '#type' => 'file',
    '#title' => t('Upload picture'),
    '#size' => 48,
    '#description' => t('Your virtual face or picture. Pictures larger than @dimensions pixels will be scaled down.', array('@dimensions' => variable_get('user_picture_dimensions', '85x85'))) . ' ' . filter_xss_admin(variable_get('user_picture_guidelines', '')),
  );
  $form['#validate'][] = 'user_validate_picture';
}

function user_form_split_pictures_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_profile_form') {
    if ($form['#user_category'] == 'account') {
      $form['picture']['#access'] = FALSE;
      unset($form['#validate'][array_search('user_validate_picture', $form['#validate'])]);
    }
  }
}
